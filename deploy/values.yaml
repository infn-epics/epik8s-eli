beamline: sparc
namespace: sparc
epik8namespace: "apps.okd-datest.lnf.infn.it"
# ingressClassName: "nginx"
targetRevision: "devel"
serviceAccountName: "default"
giturl: https://baltig.infn.it/epics-containers/epik8-sparc.git
openshift: false
epicsConfiguration:
  name: "epics-configuration" # name of existing configMap that set CA parameters
  address_list: "plsparcmrf001.lnf.infn.it
    bdsparcplxbpm007
    bdsparcplxbpm001
    bdsparcac3bpm001
    bdsparcptlbpm001
    bdsparcutlbpm001
    bdsparcdlgbpm001
    bdsparcdlgbpm002
    bdsparcdlgbpm003
    bdsparcplxbpm002
    bdsparcplxbpm003
    bdsparcplxbpm004
    bdsparcplxbpm005
    bdsparcplxbpm006
    rdsparcpitaia001.lnf.infn.it
    rdsparcpitaya002.lnf.infn.it"
    
  max_array_bytes: "10000000"
  services:
    gateway:
      name: "cagateway"
      charturl: 'https://baltig.infn.it/epics-containers/ca-gateway-chart.git'
      ingress:
        enabled: false
      loadbalancer: 192.168.36.201
      replicaCount: 2
      exec: start.sh

    archiver: 
      name: "archiver"
      charturl: 'https://baltig.infn.it/epics-containers/epics-archiver-chart.git'

      replicaCount: 1
      serviceAccount:
        create: false
        name: "default"
      dataVolume:
            claim:  ## an existing claim or empty will create a new one
            size: 50Gi ## size of the claim
            accessMode: ReadWriteOnce
      mysql:
            host: mysql
            dbname: arcappl
            user: arcappl
            pass: arcappl
      enable_ingress: true
      securityContext:
            privileged: true
            runAsUser: 0
            runAsGroup: 1000
            fsGroup: 1000

    console: 
        name: "console"
        replicaCount: 1
        charturl: https://baltig.infn.it/epics-containers/epics-console-chart.git
        enable_ingress: true
        gitRepoConfig:
          url: https://baltig.infn.it/lnf-da-control/sparc-k8s-ecs.git
          path: opi
          branch: main
          
    notebook: 
      name: "notebook"
      charturl: 'https://baltig.infn.it/epics-containers/jupyter-control-notebook-chart.git'
      replicaCount: 1
      gitRepoConfig:
        url: https://baltig.infn.it/lnf-da-control/ecs-jupyter-control.git
        path: .
        branch: main
        init: true
      dataVolume:
          claim:  ## an existing claim or empty will create a new one
          size: 5Gi ## size of the claim
          accessMode: ReadWriteOnce
      auto_security: true
      enable_ingress: true

    olog: 
      name: "olog"
      loglevel: DEBUG
      charturl: https://baltig.infn.it/epics-containers/phoebus-services-chart.git
      phoebusservice: "olog"
      auto_security: true
      enable_ingress: true
      mongodb: "sparc-ologAttachments"
      
    saveandrestore: 
      name: "saveandrestore"
      loglevel: DEBUG
      charturl: https://baltig.infn.it/epics-containers/phoebus-services-chart.git
      phoebusservice: "saveandrestore"
      auto_security: true
      enable_ingress: true
      mongodb: "sparc-ologAttachments"
    
    alarmserver: 
      name: "alarmserver"
      loglevel: DEBUG
      charturl: https://baltig.infn.it/epics-containers/phoebus-services-chart.git
      phoebusservice: "alarmserver"
      auto_security: true
      enable_ingress: true
      mongodb: "sparc-ologAttachments"
    
    channelfinder: 
      name: "channelfinder"
      loglevel: DEBUG
      charturl: https://baltig.infn.it/epics-containers/channelfinder-chart.git
      auto_security: true
      enable_ingress: true
      mongodb: "sparc-ologAttachments"

    scanserver: 
      name: "scanserver"
      loglevel: DEBUG
      charturl: https://baltig.infn.it/epics-containers/phoebus-services-chart.git
      phoebusservice: "scanserver"
      auto_security: true
      enable_ingress: true
      mongodb: "sparc-ologAttachments"
    mysql: 
      name: mysql
      charturl: registry-1.docker.io/bitnamicharts
      targetRevision: '9.21.1'
      chart: mysql
      auth:
          rootPassword: "arcappl"
          createDatabase: true
          database: "arcappl"
          username: "arcappl"
          password: "arcappl"
      serviceAccount:
        create: false
        name: "default"
  
  iocs:
    - name: "temp01" 
      asset: "https://confluence.infn.it/x/nYD8DQ"
      image: 'baltig.infn.it:4567/epics-containers/infn-epics-ioc:1.0' ## dls image
      securityContext:
            privileged: true
            runAsUser: 0
      dataVolume:
        accessMode: 'ReadWriteOnce' ## until not enabled shared
        size: 8Mi
      gitRepoConfig:
        url: https://baltig.infn.it/epics-containers/epik8-sparc.git
        path: config/ioc/temp01
        branch: main

  externalIoc:
    - name: "SR00RPA02"
      asset: "https://confluence.infn.it/x/nYD8DQ"
      gitRepoConfig:
        url: https://baltig.infn.it/lnf-da-control/ecs-jupyter-control.git
        path: .
        branch: main
        exec: 'start.sh'
      ssh:
        host: "rdsparcpitaia002.lnf.infn.it"
        user: "root"
applications:
    - name: "icpdastemp01"
      image:
        repository: baltig.infn.it:4567/epics-containers/epics-py-base
        tag: "latest"
      namespace: "simulator"
      gitRepoApp:
        url: "https://baltig.infn.it/chaos-lnf-control/py-modbus-device-simulator.git"
        path: .
        branch: main
      gitRepoConfig:
        url: "https://baltig.infn.it/epics-containers/epik8-sparc.git"
        path: config/simulator/icpdastemp01
        branch: main
      exec: "pip install --user $USER -r /app/requirements.txt;python /app/modbusDeviceSimulator.py -p 5020 -d icpconet72xx -c /config/config.json"
      service:
        type: ClusterIP
        ports:
          - name: modbusport
            port: 502
            targetport: 5020
            targetname: modbusport
            protocol: TCP
      securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
            cpu: 50m
            memory: 64Mi

backend:
  namespace: "backend"
  mongo:
    host: mongodb
    port: 27017
    user:
    pwd:
  elasticsearch:
    host: elasticsearch
    clusterName: elasticsearch
    port: 9200
  kafka:
    host: kafka-controller-headless
    port: 9092

syncPolicy:
    automated:
      prune: true  # Optional: Automatically remove resources not specified in Helm chart
      selfHeal: true
    syncOptions:
      - CreateNamespace=true 
      - Prune=true
    
record(libera, "$(P):$(B):cfg:mask:va") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.va")
}

record(libera, "$(P):$(B):cfg:mask:vb") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.vb")
}

record(libera, "$(P):$(B):cfg:mask:vc") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.vc")
}

record(libera, "$(P):$(B):cfg:mask:vd") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.vd")
}

record(libera, "$(P):$(B):cfg:mask:sum") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.sum")
}

record(libera, "$(P):$(B):cfg:mask:q") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.q")
}

record(libera, "$(P):$(B):cfg:mask:x") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.x")
}

record(libera, "$(P):$(B):cfg:mask:y") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.y")
}

record(libera, "$(P):$(B):cfg:mask:trigger_cnt") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.trigger_cnt")
}

record(libera, "$(P):$(B):cfg:mask:bunch_cnt") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.bunch_cnt")
}

record(libera, "$(P):$(B):cfg:mask:status") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.status")
}

record(libera, "$(P):$(B):cfg:mask:mode") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.mode")
}

record(libera, "$(P):$(B):cfg:mask:R2") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.R2")
}

record(libera, "$(P):$(B):cfg:mask:R3") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.R3")
}

record(libera, "$(P):$(B):cfg:mask:timestamp_H") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.timestamp_H")
}

record(libera, "$(P):$(B):cfg:mask:timestamp_L") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).cfg.mask.timestamp_L")
}

record(libera, "$(P):$(B):gbe3:reconnect") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.reconnect")
}

record(libera, "$(P):$(B):gbe3:enable") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.enable")
}

record(libera, "$(P):$(B):gbe3:status") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.status")
}

record(libera, "$(P):$(B):gbe3:src:mac") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.src.mac")
}

record(libera, "$(P):$(B):gbe3:src:ip") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.src.ip")
}

record(libera, "$(P):$(B):gbe3:src:port") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.src.port")
}

record(libera, "$(P):$(B):gbe3:dest:mac") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.dest.mac")
}

record(libera, "$(P):$(B):gbe3:dest:ip") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.dest.ip")
}

record(libera, "$(P):$(B):gbe3:dest:port") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe3.dest.port")
}

record(libera, "$(P):$(B):gbe4:reconnect") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.reconnect")
}

record(libera, "$(P):$(B):gbe4:enable") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.enable")
}

record(libera, "$(P):$(B):gbe4:status") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.status")
}

record(libera, "$(P):$(B):gbe4:src:mac") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.src.mac")
}

record(libera, "$(P):$(B):gbe4:src:ip") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.src.ip")
}

record(libera, "$(P):$(B):gbe4:src:port") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.src.port")
}

record(libera, "$(P):$(B):gbe4:dest:mac") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.dest.mac")
}

record(libera, "$(P):$(B):gbe4:dest:ip") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.dest.ip")
}

record(libera, "$(P):$(B):gbe4:dest:port") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe4.dest.port")
}

record(libera, "$(P):$(B):gbe5:reconnect") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.reconnect")
}

record(libera, "$(P):$(B):gbe5:enable") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.enable")
}

record(libera, "$(P):$(B):gbe5:status") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.status")
}

record(libera, "$(P):$(B):gbe5:src:mac") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.src.mac")
}

record(libera, "$(P):$(B):gbe5:src:ip") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.src.ip")
}

record(libera, "$(P):$(B):gbe5:src:port") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.src.port")
}

record(libera, "$(P):$(B):gbe5:dest:mac") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.dest.mac")
}

record(libera, "$(P):$(B):gbe5:dest:ip") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.dest.ip")
}

record(libera, "$(P):$(B):gbe5:dest:port") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe5.dest.port")
}

record(libera, "$(P):$(B):gbe6:reconnect") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.reconnect")
}

record(libera, "$(P):$(B):gbe6:enable") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.enable")
}

record(libera, "$(P):$(B):gbe6:status") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.status")
}

record(libera, "$(P):$(B):gbe6:src:mac") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.src.mac")
}

record(libera, "$(P):$(B):gbe6:src:ip") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.src.ip")
}

record(libera, "$(P):$(B):gbe6:src:port") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.src.port")
}

record(libera, "$(P):$(B):gbe6:dest:mac") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.dest.mac")
}

record(libera, "$(P):$(B):gbe6:dest:ip") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.dest.ip")
}

record(libera, "$(P):$(B):gbe6:dest:port") 
{
    info(MCII,  "mcii://$(D)/boards.$(MB).gbe6.dest.port")
}

